# -*- coding: utf-8 -*-
"""copy_Paste_face_code.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ku0_WvhFvh-SSxKY2hu6nf3i5hfSfPd2
"""

import cv2

# Load the images
photo1 = cv2.imread('photo1.jpg')
photo2 = cv2.imread('photo2.jpg')

# Load a pre-trained face detector (you might need to install dlib library)
face_detector = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')

# Detect faces in the first photo
faces = face_detector.detectMultiScale(photo1, scaleFactor=1.1, minNeighbors=5, minSize=(30, 30))

# Assuming only one face is detected, crop the face from the first photo
if len(faces) == 1:
    x, y, w, h = faces[0]
    cropped_face = photo1[y:y+h, x:x+w]

    # Resize the cropped face to match the size of the face region in the second photo
    face2 = cv2.resize(cropped_face, (w, h))

    # Replace the face region in the second photo with the cropped face
    photo2[y:y+h, x:x+w] = face2

    # Save the modified photo2
    cv2.imwrite('modified_photo2.jpg', photo2)

else:
    print("No face or multiple faces detected in photo1.")

# Display the modified photo2
cv2.imshow('Modified Photo2', photo2)
cv2.waitKey(0)
cv2.destroyAllWindows()